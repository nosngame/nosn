/* This is a generated file. DO NOT EDIT! */

static const FoldFunc fold_func[] = {
  fold_kfold_numarith,
  fold_kfold_ldexp,
  fold_kfold_fpmath,
  fold_kfold_numpow,
  fold_kfold_numcomp,
  fold_kfold_intarith,
  fold_kfold_intovarith,
  fold_kfold_bnot,
  fold_kfold_bswap,
  fold_kfold_intcomp,
  fold_kfold_intcomp0,
  fold_kfold_int64arith,
  fold_kfold_int64arith2,
  fold_kfold_int64shift,
  fold_kfold_bnot64,
  fold_kfold_bswap64,
  fold_kfold_int64comp,
  fold_kfold_int64comp0,
  fold_kfold_snew_kptr,
  fold_kfold_snew_empty,
  fold_kfold_strref,
  fold_kfold_strref_snew,
  fold_kfold_strcmp,
  fold_bufput_append,
  fold_bufput_kgc,
  fold_bufstr_kfold_cse,
  fold_bufput_kfold_op,
  fold_bufput_kfold_rep,
  fold_bufput_kfold_fmt,
  fold_kfold_add_kgc,
  fold_kfold_add_kptr,
  fold_kfold_add_kright,
  fold_kfold_tobit,
  fold_kfold_conv_kint_num,
  fold_kfold_conv_kintu32_num,
  fold_kfold_conv_kint_ext,
  fold_kfold_conv_kint_i64,
  fold_kfold_conv_kint64_num_i64,
  fold_kfold_conv_kint64_num_u64,
  fold_kfold_conv_kint64_int_i64,
  fold_kfold_conv_knum_int_num,
  fold_kfold_conv_knum_u32_num,
  fold_kfold_conv_knum_i64_num,
  fold_kfold_conv_knum_u64_num,
  fold_kfold_tostr_knum,
  fold_kfold_tostr_kint,
  fold_kfold_strto,
  lj_opt_cse,
  fold_kfold_kref,
  fold_shortcut_round,
  fold_shortcut_left,
  fold_shortcut_dropleft,
  fold_shortcut_leftleft,
  fold_simplify_numadd_negx,
  fold_simplify_numadd_xneg,
  fold_simplify_numsub_k,
  fold_simplify_numsub_negk,
  fold_simplify_numsub_xneg,
  fold_simplify_nummuldiv_k,
  fold_simplify_nummuldiv_negk,
  fold_simplify_nummuldiv_negneg,
  fold_simplify_numpow_xk,
  fold_simplify_numpow_kx,
  fold_shortcut_conv_num_int,
  fold_simplify_conv_int_num,
  fold_simplify_conv_i64_num,
  fold_simplify_conv_int_i64,
  fold_simplify_conv_flt_num,
  fold_simplify_tobit_conv,
  fold_simplify_floor_conv,
  fold_simplify_conv_sext,
  fold_simplify_conv_narrow,
  fold_cse_conv,
  fold_narrow_convert,
  fold_simplify_intadd_k,
  fold_simplify_intmul_k,
  fold_simplify_intsub_k,
  fold_simplify_intsub_kleft,
  fold_simplify_intadd_k64,
  fold_simplify_intsub_k64,
  fold_simplify_intmul_k32,
  fold_simplify_intmul_k64,
  fold_simplify_intmod_k,
  fold_simplify_intmod_kleft,
  fold_simplify_intsub,
  fold_simplify_intsubadd_leftcancel,
  fold_simplify_intsubsub_leftcancel,
  fold_simplify_intsubsub_rightcancel,
  fold_simplify_intsubadd_rightcancel,
  fold_simplify_intsubaddadd_cancel,
  fold_simplify_band_k,
  fold_simplify_bor_k,
  fold_simplify_bxor_k,
  fold_simplify_shift_ik,
  fold_simplify_shift_andk,
  fold_simplify_shift1_ki,
  fold_simplify_shift2_ki,
  fold_simplify_shiftk_andk,
  fold_simplify_andk_shiftk,
  fold_reassoc_intarith_k,
  fold_reassoc_intarith_k64,
  fold_reassoc_dup,
  fold_reassoc_bxor,
  fold_reassoc_shift,
  fold_reassoc_minmax_k,
  fold_reassoc_minmax_left,
  fold_reassoc_minmax_right,
  fold_abc_fwd,
  fold_abc_k,
  fold_abc_invar,
  fold_comm_swap,
  fold_comm_equal,
  fold_comm_comp,
  fold_comm_dup,
  fold_comm_bxor,
  fold_merge_eqne_snew_kgc,
  lj_opt_fwd_aload,
  fold_kfold_hload_kkptr,
  lj_opt_fwd_hload,
  lj_opt_fwd_uload,
  lj_opt_fwd_tab_len,
  fold_cse_uref,
  lj_opt_fwd_hrefk,
  fold_fwd_href_tnew,
  fold_fwd_href_tdup,
  fold_fload_tab_tnew_asize,
  fold_fload_tab_tnew_hmask,
  fold_fload_tab_tdup_asize,
  fold_fload_tab_tdup_hmask,
  fold_fload_tab_ah,
  fold_fload_str_len_kgc,
  fold_fload_str_len_snew,
  fold_fload_str_len_tostr,
  fold_fload_cdata_typeid_kgc,
  fold_fload_cdata_int64_kgc,
  fold_fload_cdata_typeid_cnew,
  fold_fload_cdata_ptr_int64_cnew,
  lj_opt_cse,
  lj_opt_fwd_fload,
  fold_fwd_sload,
  fold_xload_kptr,
  lj_opt_fwd_xload,
  fold_barrier_tab,
  fold_barrier_tnew_tdup,
  fold_prof,
  lj_opt_dse_ahstore,
  lj_opt_dse_ustore,
  lj_opt_dse_fstore,
  lj_opt_dse_xstore,
  lj_ir_emit
};

static const uint32_t fold_hash[978] = {
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x0b54741d,
0x47b4aa76,
0xffffffff,
0x0c58741d,
0x898bfc11,
0xffffffff,
0x0c5c741d,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x47b4aa96,
0xffffffff,
0x035c7017,
0xffffffff,
0x1cc18c0c,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x316ad401,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x5f485fff,
0xffffffff,
0xffffffff,
0x604c5fff,
0xffffffff,
0xffffffff,
0x60505fff,
0x6352a417,
0x64468c1d,
0x4d545fff,
0xffffffff,
0xffffffff,
0x2cb873ff,
0xffffffff,
0xffffffff,
0x0402701c,
0x868a6010,
0xffffffff,
0x0406701c,
0xffffffff,
0xffffffff,
0x040a701c,
0xffffffff,
0xffffffff,
0x040e701c,
0x818bfc07,
0xffffffff,
0x0412701c,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x1000741d,
0x3b56bc1c,
0xffffffff,
0x1004741d,
0xffffffff,
0xffffffff,
0x1008741d,
0x129c6817,
0xffffffff,
0x100c741d,
0x888b4c0f,
0xffffffff,
0x3010741d,
0x139dfc17,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x3fb569d3,
0xffffffff,
0xffffffff,
0xffffffff,
0x5f4a77ff,
0xffffffff,
0x5e49fc21,
0x604e77ff,
0xffffffff,
0x5e4dfc21,
0xffffffff,
0xffffffff,
0x5e51fc21,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x1cc18c0d,
0xffffffff,
0x4a6dfc17,
0xffffffff,
0x6750a017,
0x6444881d,
0x4b71fc17,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x3013fc1b,
0xffffffff,
0x316ad402,
0xffffffff,
0xffffffff,
0x61488417,
0x7c774418,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x61508417,
0x3a57fc1c,
0x5654abff,
0xffffffff,
0xffffffff,
0xffffffff,
0x95c1ffff,
0xffffffff,
0xffffffff,
0x7d8b4008,
0x95c5ffff,
0xffffffff,
0x868a6011,
0xffffffff,
0x17ab5056,
0x5b45fc17,
0xffffffff,
0xffffffff,
0x5d49fc17,
0xffffffff,
0xffffffff,
0x5d4dfc17,
0x818bfc08,
0xffffffff,
0x5d51fc17,
0xffffffff,
0xffffffff,
0x4c55fc17,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x3d5dfc17,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x888b4c10,
0x6868d017,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x3e5c73ff,
0xffffffff,
0xffffffff,
0x95a1ffff,
0xffffffff,
0xffffffff,
0x95a5ffff,
0x674e9c17,
0x6442841d,
0x95a9ffff,
0xffffffff,
0xffffffff,
0x19adffff,
0xffffffff,
0xffffffff,
0x8eb1ffff,
0xffffffff,
0xffffffff,
0x48b5ffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x14806017,
0x1cc18c0e,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x5a43fc1d,
0xffffffff,
0xffffffff,
0x5c47fc1d,
0xffffffff,
0xffffffff,
0xffffffff,
0x1e52681d,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x4e53fc1d,
0xffffffff,
0xffffffff,
0x5157fc1d,
0x1e526417,
0x8c8c6bff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x8d8dffff,
0xffffffff,
0x7e8b4009,
0x5954a429,
0x8991ffff,
0xffffffff,
0x9195ffff,
0xffffffff,
0xffffffff,
0x9399ffff,
0x49b4aa6e,
0xffffffff,
0x6c15fc17,
0x6866cc17,
0x818bfc09,
0x23b45e6f,
0x44b7681c,
0x0f407400,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x674c9817,
0xffffffff,
0xffffffff,
0xffffffff,
0x073e5c00,
0xffffffff,
0xffffffff,
0xffffffff,
0x888b4c11,
0xffffffff,
0xffffffff,
0xffffffff,
0x49b4aaae,
0xffffffff,
0xffffffff,
0x7169ffff,
0xffffffff,
0xffffffff,
0x6e6dffff,
0xffffffff,
0xffffffff,
0x6e71ffff,
0xffffffff,
0xffffffff,
0x7a75ffff,
0x28b4726e,
0xffffffff,
0x9579ffff,
0xffffffff,
0x95b20000,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x29b4728e,
0x1cc18c0f,
0xffffffff,
0xffffffff,
0xffffffff,
0x25b475d5,
0xffffffff,
0x110bfc1d,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x2ab472ae,
0xffffffff,
0xffffffff,
0xffffffff,
0x7145ffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x2bb472ce,
0x05665c17,
0x62429417,
0x5455ffff,
0xffffffff,
0xffffffff,
0x47b4ae75,
0x066e5c17,
0x30126fff,
0x674a9417,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x6a67fc34,
0xffffffff,
0x6568d3ff,
0xffffffff,
0x42b56a75,
0x23b45e70,
0x47b4ae95,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x8faf4000,
0xffffffff,
0xffffffff,
0x95a3fc00,
0xffffffff,
0xffffffff,
0x42b56a95,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x3c58bc2f,
0x15813bff,
0x8eaffc00,
0xffffffff,
0x05425c17,
0xffffffff,
0xffffffff,
0x05465c17,
0x1d52601d,
0x27b47675,
0x054a5c17,
0xffffffff,
0xffffffff,
0x054e5c17,
0xffffffff,
0xffffffff,
0x05525c17,
0xffffffff,
0xffffffff,
0x05565c17,
0xffffffff,
0x27b47695,
0x055a5c17,
0xffffffff,
0xffffffff,
0x055e5c17,
0x49b6a41c,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x75866800,
0xffffffff,
0xffffffff,
0x26b475d6,
0x7001ffff,
0x7687fc00,
0xffffffff,
0x7005ffff,
0x898bfc00,
0xffffffff,
0x7009ffff,
0x67489017,
0xffffffff,
0x700dffff,
0xffffffff,
0xffffffff,
0x6f11ffff,
0xffffffff,
0xffffffff,
0x6d15ffff,
0x6566cfff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x0060701c,
0x3955fc2f,
0xffffffff,
0x0064701c,
0x0d487417,
0x47b4ae76,
0x2f13141b,
0x0068701c,
0x0d4c7417,
0xffffffff,
0x0d507417,
0xffffffff,
0xffffffff,
0x797c63ff,
0xffffffff,
0xffffffff,
0x42b56a76,
0x23b45e71,
0x47b4ae96,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x42b56a96,
0x09025c17,
0xffffffff,
0xffffffff,
0x09065c17,
0xffffffff,
0xffffffff,
0x090a5c17,
0xffffffff,
0xffffffff,
0x090e5c17,
0x6456ac1d,
0xffffffff,
0x30125c17,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x73113818,
0xffffffff,
0xffffffff,
0x63468c17,
0x0054701c,
0x47b4a675,
0xffffffff,
0x30106018,
0x0058701c,
0xffffffff,
0x0b42741d,
0xffffffff,
0xffffffff,
0x0b46741d,
0xffffffff,
0xffffffff,
0xffffffff,
0x47b4a695,
0xffffffff,
0xffffffff,
0xffffffff,
0x898bfc01,
0x0b52741d,
0xffffffff,
0x848b7000,
0x0b56741d,
0xffffffff,
0xffffffff,
0x0c5a741d,
0x7c77441c,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x3360bc1c,
0xffffffff,
0xffffffff,
0xffffffff,
0x2eba6000,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x34408000,
0xffffffff,
0x23b45e72,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x5f4a5fff,
0x838b3800,
0xffffffff,
0x604e5fff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x828a6000,
0xffffffff,
0xffffffff,
0xffffffff,
0x0400701c,
0x535a5fff,
0x63448817,
0x0404701c,
0xffffffff,
0xffffffff,
0x0408701c,
0xffffffff,
0xffffffff,
0x040c701c,
0x878b480e,
0x21b45dd3,
0x0410701c,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x3854bc1c,
0x7f8b4408,
0x1002741d,
0x3b58bc1c,
0x47b4a676,
0x1006741d,
0xffffffff,
0xffffffff,
0x100a741d,
0xffffffff,
0xffffffff,
0x100e741d,
0xffffffff,
0xffffffff,
0x3012741d,
0xffffffff,
0xffffffff,
0x47b4a696,
0xffffffff,
0xffffffff,
0xffffffff,
0x5f4877ff,
0xffffffff,
0xffffffff,
0x604c77ff,
0xffffffff,
0x5e4bfc21,
0x605077ff,
0xffffffff,
0x5e4ffc21,
0x4d5477ff,
0xffffffff,
0xffffffff,
0xffffffff,
0x43b569ae,
0xffffffff,
0xffffffff,
0x6452a41d,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x4a6ffc17,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x3011fc1b,
0xffffffff,
0x63428417,
0x026a73ff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x614a8417,
0xffffffff,
0xffffffff,
0x614e8417,
0x3755fc1c,
0x78c1fc1e,
0x3a59fc1c,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x95c3ffff,
0xffffffff,
0x66468fff,
0xffffffff,
0x6868d01c,
0xffffffff,
0x5a43fc17,
0xffffffff,
0xffffffff,
0x5c47fc17,
0xffffffff,
0x24b45eb3,
0x5d4bfc17,
0x22b45dd4,
0x1e526817,
0x5d4ffc17,
0xffffffff,
0xffffffff,
0x4a53fc17,
0xffffffff,
0xffffffff,
0x5057fc17,
0x808b4409,
0xffffffff,
0x525bfc17,
0x24b45ed3,
0xffffffff,
0xffffffff,
0x343e7c00,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x1ac18c13,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x40b56a6e,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x456b6800,
0x18abffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x40b56a8e,
0x08405c00,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x95bfffff,
0xffffffff,
0xffffffff,
0x5554a7ff,
0x41b56aae,
0xffffffff,
0xffffffff,
0xffffffff,
0x5b45fc1d,
0xffffffff,
0x65448bff,
0xffffffff,
0x6866cc1c,
0xffffffff,
0x898bfc0e,
0xffffffff,
0xffffffff,
0x41b56ace,
0xffffffff,
0xffffffff,
0x4f55fc1d,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x8a8bffff,
0x1ac18c09,
0xffffffff,
0x8b8fffff,
0xffffffff,
0xffffffff,
0x0a0bfc17,
0x9193ffff,
0xffffffff,
0x9297ffff,
0xffffffff,
0xffffffff,
0x6a69fc33,
0x949bffff,
0x24b45eb4,
0x959fffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x1f53fc18,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x24b45ed4,
0xffffffff,
0x3552bfff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x1ac18c14,
0xffffffff,
0x345ebfff,
0xffffffff,
0x7167ffff,
0x7b7743ff,
0x8faf4400,
0xffffffff,
0xffffffff,
0x898bfc04,
0x546fffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x456b6801,
0x8177ffff,
0xffffffff,
0xffffffff,
0x654287ff,
0x8e7bffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x1e52641d,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x1d526017,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x49b6a81c,
0x7143ffff,
0x898bfc0f,
0xffffffff,
0x7247ffff,
0xffffffff,
0x0e3e7400,
0x49b4a66e,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x6e53ffff,
0x05685c17,
0x1cc18c0a,
0x6e57ffff,
0x066c5c17,
0x30106fff,
0xffffffff,
0x06705c17,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x6966d3ff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x49b4a6ae,
0xffffffff,
0x1f53fc19,
0xffffffff,
0xffffffff,
0x20b6701c,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x5855fc29,
0xffffffff,
0xffffffff,
0x3c56bc2f,
0xffffffff,
0xffffffff,
0x902bffff,
0x858a600e,
0x1ac18c15,
0xffffffff,
0x05445c17,
0xffffffff,
0xffffffff,
0x05485c17,
0xffffffff,
0xffffffff,
0x054c5c17,
0xffffffff,
0xffffffff,
0x05505c17,
0xffffffff,
0xffffffff,
0x05545c17,
0x456b6802,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x6356ac17,
0x7485fc00,
0xffffffff,
0x7003ffff,
0x62429017,
0x7789fc00,
0x7007ffff,
0xffffffff,
0x47b4aa75,
0x700bffff,
0xffffffff,
0xffffffff,
0x700fffff,
0x898bfc10,
0xffffffff,
0x6f13ffff,
0xffffffff,
0xffffffff,
0x9517ffff,
0x6968cfff,
0xffffffff,
0x47b4aa95,
0x2db85fff,
0x3653fc2f,
0xffffffff,
0x0062701c,
0x1cc18c0b,
0xffffffff,
0x2f11141b,
0x0066701c,
0x0d4a7417,
0xffffffff,
0x0d4e7417,
0xffffffff,
0xffffffff,
0x797a63ff,
0xffffffff,
0xffffffff,
0x46b5feb3,
0x3260c01c,
0x316ad400,
0xffffffff,
0x7c774416,
0xffffffff,
0xffffffff,
0x6b15fc29,
0x1f53fc1a,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x46b5fed3,
0x09005c17,
0x5755fc2a,
0x16bd8c00,
0x09045c17,
0x01647017,
0xffffffff,
0x09085c17,
0xffffffff,
0x868a600f,
0x1bc18c16,
0x090c5c17,
0xffffffff,
0x30105c17,
0xffffffff,
0xffffffff,
0x09145c17,
0xffffffff,
0x818bfc06,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x73133818,
0x0052701c,
0xffffffff,
0xffffffff,
0x0056701c,
0xffffffff,
0xffffffff,
0x30126018,
0xffffffff,
0x878b4c0e,
0x0b44741d,
0x005e701c,
0xffffffff,
0xffffffff,
0xffffffff
};

#define fold_hashkey(k)	(lj_rol(lj_rol((k),10)-(k),1)%977)

